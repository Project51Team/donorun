{"version":3,"file":"src_main_webapp_app_entities_transaction_transaction_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/entities/transaction/delete/transaction-delete-dialog.component.ts","./src/main/webapp/app/entities/transaction/delete/transaction-delete-dialog.component.html","./src/main/webapp/app/entities/transaction/detail/transaction-detail.component.ts","./src/main/webapp/app/entities/transaction/detail/transaction-detail.component.html","./src/main/webapp/app/entities/transaction/list/transaction.component.ts","./src/main/webapp/app/entities/transaction/list/transaction.component.html","./src/main/webapp/app/entities/transaction/route/transaction-routing-resolve.service.ts","./src/main/webapp/app/entities/transaction/route/transaction-routing.module.ts","./src/main/webapp/app/entities/transaction/service/transaction.service.ts","./src/main/webapp/app/entities/transaction/transaction.model.ts","./src/main/webapp/app/entities/transaction/transaction.module.ts","./src/main/webapp/app/entities/transaction/update/transaction-update.component.ts","./src/main/webapp/app/entities/transaction/update/transaction-update.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ITransaction } from '../transaction.model';\nimport { TransactionService } from '../service/transaction.service';\n\n@Component({\n  templateUrl: './transaction-delete-dialog.component.html',\n})\nexport class TransactionDeleteDialogComponent {\n  transaction?: ITransaction;\n\n  constructor(protected transactionService: TransactionService, protected activeModal: NgbActiveModal) {}\n\n  cancel(): void {\n    this.activeModal.dismiss();\n  }\n\n  confirmDelete(id: string): void {\n    this.transactionService.delete(id).subscribe(() => {\n      this.activeModal.close('deleted');\n    });\n  }\n}\n","<form *ngIf=\"transaction\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(transaction.id!)\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" data-cy=\"transactionDeleteDialogHeading\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\n  </div>\n\n  <div class=\"modal-body\">\n    <jhi-alert-error></jhi-alert-error>\n\n    <p id=\"jhi-delete-transaction-heading\" jhiTranslate=\"donorunApp.transaction.delete.question\" [translateValues]=\"{ id: transaction.id }\">\n      Are you sure you want to delete this Transaction?\n    </p>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n    </button>\n\n    <button id=\"jhi-confirm-delete-transaction\" data-cy=\"entityConfirmDeleteButton\" type=\"submit\" class=\"btn btn-danger\">\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n    </button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ITransaction } from '../transaction.model';\n\n@Component({\n  selector: 'jhi-transaction-detail',\n  templateUrl: './transaction-detail.component.html',\n})\nexport class TransactionDetailComponent implements OnInit {\n  transaction: ITransaction | null = null;\n\n  constructor(protected activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ transaction }) => {\n      this.transaction = transaction;\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n}\n","<div class=\"d-flex justify-content-center\">\n  <div class=\"col-8\">\n    <div *ngIf=\"transaction\">\n      <h2 data-cy=\"transactionDetailsHeading\"><span jhiTranslate=\"donorunApp.transaction.detail.title\">Transaction</span></h2>\n\n      <hr />\n\n      <jhi-alert-error></jhi-alert-error>\n\n      <jhi-alert></jhi-alert>\n\n      <dl class=\"row-md jh-entity-details\">\n        <dt><span jhiTranslate=\"global.field.id\">ID</span></dt>\n        <dd>\n          <span>{{ transaction.id }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"donorunApp.transaction.sumOfMoney\">Sum Of Money</span></dt>\n        <dd>\n          <span>{{ transaction.sumOfMoney }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"donorunApp.transaction.message\">Message</span></dt>\n        <dd>\n          <span>{{ transaction.message }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"donorunApp.transaction.wasPaid\">Was Paid</span></dt>\n        <dd>\n          <span>{{ transaction.wasPaid }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"donorunApp.transaction.dateOfPayment\">Date Of Payment</span></dt>\n        <dd>\n          <span>{{ transaction.dateOfPayment | formatMediumDatetime }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"donorunApp.transaction.createdDate\">Created Date</span></dt>\n        <dd>\n          <span>{{ transaction.createdDate | formatMediumDatetime }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"donorunApp.transaction.recipient\">Recipient</span></dt>\n        <dd>\n          <div *ngIf=\"transaction.recipient\">\n            <a [routerLink]=\"['/money-recipient', transaction.recipient?.id, 'view']\">{{ transaction.recipient?.id }}</a>\n          </div>\n        </dd>\n        <dt><span jhiTranslate=\"donorunApp.transaction.activities\">Activities</span></dt>\n        <dd>\n          <span *ngFor=\"let activities of transaction.activities; let last = last\">\n            <a [routerLink]=\"['/activity', activities?.id, 'view']\">{{ activities.id }}</a\n            >{{ last ? '' : ', ' }}\n          </span>\n        </dd>\n      </dl>\n\n      <button type=\"submit\" (click)=\"previousState()\" class=\"btn btn-info\" data-cy=\"entityDetailsBackButton\">\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.back\">Back</span>\n      </button>\n\n      <button type=\"button\" [routerLink]=\"['/transaction', transaction.id, 'edit']\" class=\"btn btn-primary\">\n        <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.edit\">Edit</span>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { combineLatest } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ITransaction } from '../transaction.model';\n\nimport { ASC, DESC, ITEMS_PER_PAGE, SORT } from 'app/config/pagination.constants';\nimport { TransactionService } from '../service/transaction.service';\nimport { TransactionDeleteDialogComponent } from '../delete/transaction-delete-dialog.component';\n\n@Component({\n  selector: 'jhi-transaction',\n  templateUrl: './transaction.component.html',\n})\nexport class TransactionComponent implements OnInit {\n  transactions?: ITransaction[];\n  isLoading = false;\n  totalItems = 0;\n  itemsPerPage = ITEMS_PER_PAGE;\n  page?: number;\n  predicate!: string;\n  ascending!: boolean;\n  ngbPaginationPage = 1;\n\n  constructor(\n    protected transactionService: TransactionService,\n    protected activatedRoute: ActivatedRoute,\n    protected router: Router,\n    protected modalService: NgbModal\n  ) {}\n\n  loadPage(page?: number, dontNavigate?: boolean): void {\n    this.isLoading = true;\n    const pageToLoad: number = page ?? this.page ?? 1;\n\n    this.transactionService\n      .query({\n        page: pageToLoad - 1,\n        size: this.itemsPerPage,\n        sort: this.sort(),\n      })\n      .subscribe({\n        next: (res: HttpResponse<ITransaction[]>) => {\n          this.isLoading = false;\n          this.onSuccess(res.body, res.headers, pageToLoad, !dontNavigate);\n        },\n        error: () => {\n          this.isLoading = false;\n          this.onError();\n        },\n      });\n  }\n\n  ngOnInit(): void {\n    this.handleNavigation();\n  }\n\n  trackId(_index: number, item: ITransaction): string {\n    return item.id!;\n  }\n\n  delete(transaction: ITransaction): void {\n    const modalRef = this.modalService.open(TransactionDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\n    modalRef.componentInstance.transaction = transaction;\n    // unsubscribe not needed because closed completes on modal close\n    modalRef.closed.subscribe(reason => {\n      if (reason === 'deleted') {\n        this.loadPage();\n      }\n    });\n  }\n\n  protected sort(): string[] {\n    const result = [this.predicate + ',' + (this.ascending ? ASC : DESC)];\n    if (this.predicate !== 'id') {\n      result.push('id');\n    }\n    return result;\n  }\n\n  protected handleNavigation(): void {\n    combineLatest([this.activatedRoute.data, this.activatedRoute.queryParamMap]).subscribe(([data, params]) => {\n      const page = params.get('page');\n      const pageNumber = +(page ?? 1);\n      const sort = (params.get(SORT) ?? data['defaultSort']).split(',');\n      const predicate = sort[0];\n      const ascending = sort[1] === ASC;\n      if (pageNumber !== this.page || predicate !== this.predicate || ascending !== this.ascending) {\n        this.predicate = predicate;\n        this.ascending = ascending;\n        this.loadPage(pageNumber, true);\n      }\n    });\n  }\n\n  protected onSuccess(data: ITransaction[] | null, headers: HttpHeaders, page: number, navigate: boolean): void {\n    this.totalItems = Number(headers.get('X-Total-Count'));\n    this.page = page;\n    if (navigate) {\n      this.router.navigate(['/transaction'], {\n        queryParams: {\n          page: this.page,\n          size: this.itemsPerPage,\n          sort: this.predicate + ',' + (this.ascending ? ASC : DESC),\n        },\n      });\n    }\n    this.transactions = data ?? [];\n    this.ngbPaginationPage = this.page;\n  }\n\n  protected onError(): void {\n    this.ngbPaginationPage = this.page ?? 1;\n  }\n}\n","<div>\n  <h2 id=\"page-heading\" data-cy=\"TransactionHeading\">\n    <span jhiTranslate=\"donorunApp.transaction.home.title\">Transactions</span>\n\n    <div class=\"d-flex justify-content-end\">\n      <button class=\"btn btn-info me-2\" (click)=\"loadPage()\" [disabled]=\"isLoading\">\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\n        <span jhiTranslate=\"donorunApp.transaction.home.refreshListLabel\">Refresh List</span>\n      </button>\n\n      <button\n        id=\"jh-create-entity\"\n        data-cy=\"entityCreateButton\"\n        class=\"btn btn-primary jh-create-entity create-transaction\"\n        [routerLink]=\"['/transaction/new']\"\n      >\n        <fa-icon icon=\"plus\"></fa-icon>\n        <span jhiTranslate=\"donorunApp.transaction.home.createLabel\"> Create a new Transaction </span>\n      </button>\n    </div>\n  </h2>\n\n  <jhi-alert-error></jhi-alert-error>\n\n  <jhi-alert></jhi-alert>\n\n  <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"transactions?.length === 0\">\n    <span jhiTranslate=\"donorunApp.transaction.home.notFound\">No transactions found</span>\n  </div>\n\n  <div class=\"table-responsive\" id=\"entities\" *ngIf=\"transactions && transactions.length > 0\">\n    <table class=\"table table-striped\" aria-describedby=\"page-heading\">\n      <thead>\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"loadPage()\">\n          <th scope=\"col\" jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <fa-icon icon=\"sort\"></fa-icon></th>\n          <th scope=\"col\" jhiSortBy=\"sumOfMoney\">\n            <span jhiTranslate=\"donorunApp.transaction.sumOfMoney\">Sum Of Money</span> <fa-icon icon=\"sort\"></fa-icon>\n          </th>\n          <th scope=\"col\" jhiSortBy=\"message\">\n            <span jhiTranslate=\"donorunApp.transaction.message\">Message</span> <fa-icon icon=\"sort\"></fa-icon>\n          </th>\n          <th scope=\"col\" jhiSortBy=\"wasPaid\">\n            <span jhiTranslate=\"donorunApp.transaction.wasPaid\">Was Paid</span> <fa-icon icon=\"sort\"></fa-icon>\n          </th>\n          <th scope=\"col\" jhiSortBy=\"dateOfPayment\">\n            <span jhiTranslate=\"donorunApp.transaction.dateOfPayment\">Date Of Payment</span> <fa-icon icon=\"sort\"></fa-icon>\n          </th>\n          <th scope=\"col\" jhiSortBy=\"createdDate\">\n            <span jhiTranslate=\"donorunApp.transaction.createdDate\">Created Date</span> <fa-icon icon=\"sort\"></fa-icon>\n          </th>\n          <th scope=\"col\" jhiSortBy=\"recipient.id\">\n            <span jhiTranslate=\"donorunApp.transaction.recipient\">Recipient</span> <fa-icon icon=\"sort\"></fa-icon>\n          </th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let transaction of transactions; trackBy: trackId\" data-cy=\"entityTable\">\n          <td>\n            <a [routerLink]=\"['/transaction', transaction.id, 'view']\">{{ transaction.id }}</a>\n          </td>\n          <td>{{ transaction.sumOfMoney }}</td>\n          <td>{{ transaction.message }}</td>\n          <td>{{ transaction.wasPaid }}</td>\n          <td>{{ transaction.dateOfPayment | formatMediumDatetime }}</td>\n          <td>{{ transaction.createdDate | formatMediumDatetime }}</td>\n          <td>\n            <div *ngIf=\"transaction.recipient\">\n              <a [routerLink]=\"['/money-recipient', transaction.recipient?.id, 'view']\">{{ transaction.recipient?.id }}</a>\n            </div>\n          </td>\n          <td class=\"text-end\">\n            <div class=\"btn-group\">\n              <button\n                type=\"submit\"\n                [routerLink]=\"['/transaction', transaction.id, 'view']\"\n                class=\"btn btn-info btn-sm\"\n                data-cy=\"entityDetailsButton\"\n              >\n                <fa-icon icon=\"eye\"></fa-icon>\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.view\">View</span>\n              </button>\n\n              <button\n                type=\"submit\"\n                [routerLink]=\"['/transaction', transaction.id, 'edit']\"\n                class=\"btn btn-primary btn-sm\"\n                data-cy=\"entityEditButton\"\n              >\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\">Edit</span>\n              </button>\n\n              <button type=\"submit\" (click)=\"delete(transaction)\" class=\"btn btn-danger btn-sm\" data-cy=\"entityDeleteButton\">\n                <fa-icon icon=\"times\"></fa-icon>\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.delete\">Delete</span>\n              </button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div *ngIf=\"transactions && transactions.length > 0\">\n    <div class=\"d-flex justify-content-center\">\n      <jhi-item-count [params]=\"{ page: page, totalItems: totalItems, itemsPerPage: itemsPerPage }\"></jhi-item-count>\n    </div>\n\n    <div class=\"d-flex justify-content-center\">\n      <ngb-pagination\n        [collectionSize]=\"totalItems\"\n        [(page)]=\"ngbPaginationPage\"\n        [pageSize]=\"itemsPerPage\"\n        [maxSize]=\"5\"\n        [rotate]=\"true\"\n        [boundaryLinks]=\"true\"\n        (pageChange)=\"loadPage($event)\"\n      ></ngb-pagination>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { ITransaction, Transaction } from '../transaction.model';\nimport { TransactionService } from '../service/transaction.service';\n\n@Injectable({ providedIn: 'root' })\nexport class TransactionRoutingResolveService implements Resolve<ITransaction> {\n  constructor(protected service: TransactionService, protected router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<ITransaction> | Observable<never> {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id).pipe(\n        mergeMap((transaction: HttpResponse<Transaction>) => {\n          if (transaction.body) {\n            return of(transaction.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        })\n      );\n    }\n    return of(new Transaction());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\nimport { TransactionComponent } from '../list/transaction.component';\nimport { TransactionDetailComponent } from '../detail/transaction-detail.component';\nimport { TransactionUpdateComponent } from '../update/transaction-update.component';\nimport { TransactionRoutingResolveService } from './transaction-routing-resolve.service';\n\nconst transactionRoute: Routes = [\n  {\n    path: '',\n    component: TransactionComponent,\n    data: {\n      defaultSort: 'id,asc',\n    },\n    canActivate: [UserRouteAccessService],\n  },\n  {\n    path: ':id/view',\n    component: TransactionDetailComponent,\n    resolve: {\n      transaction: TransactionRoutingResolveService,\n    },\n    canActivate: [UserRouteAccessService],\n  },\n  {\n    path: 'new',\n    component: TransactionUpdateComponent,\n    resolve: {\n      transaction: TransactionRoutingResolveService,\n    },\n    canActivate: [UserRouteAccessService],\n  },\n  {\n    path: ':id/edit',\n    component: TransactionUpdateComponent,\n    resolve: {\n      transaction: TransactionRoutingResolveService,\n    },\n    canActivate: [UserRouteAccessService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(transactionRoute)],\n  exports: [RouterModule],\n})\nexport class TransactionRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport dayjs from 'dayjs/esm';\n\nimport { isPresent } from 'app/core/util/operators';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { ITransaction, getTransactionIdentifier } from '../transaction.model';\n\nexport type EntityResponseType = HttpResponse<ITransaction>;\nexport type EntityArrayResponseType = HttpResponse<ITransaction[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class TransactionService {\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/transactions');\n\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\n\n  create(transaction: ITransaction): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(transaction);\n    return this.http\n      .post<ITransaction>(this.resourceUrl, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  update(transaction: ITransaction): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(transaction);\n    return this.http\n      .put<ITransaction>(`${this.resourceUrl}/${getTransactionIdentifier(transaction) as string}`, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  partialUpdate(transaction: ITransaction): Observable<EntityResponseType> {\n    const copy = this.convertDateFromClient(transaction);\n    return this.http\n      .patch<ITransaction>(`${this.resourceUrl}/${getTransactionIdentifier(transaction) as string}`, copy, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  find(id: string): Observable<EntityResponseType> {\n    return this.http\n      .get<ITransaction>(`${this.resourceUrl}/${id}`, { observe: 'response' })\n      .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http\n      .get<ITransaction[]>(this.resourceUrl, { params: options, observe: 'response' })\n      .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\n  }\n\n  delete(id: string): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  addTransactionToCollectionIfMissing(\n    transactionCollection: ITransaction[],\n    ...transactionsToCheck: (ITransaction | null | undefined)[]\n  ): ITransaction[] {\n    const transactions: ITransaction[] = transactionsToCheck.filter(isPresent);\n    if (transactions.length > 0) {\n      const transactionCollectionIdentifiers = transactionCollection.map(transactionItem => getTransactionIdentifier(transactionItem)!);\n      const transactionsToAdd = transactions.filter(transactionItem => {\n        const transactionIdentifier = getTransactionIdentifier(transactionItem);\n        if (transactionIdentifier == null || transactionCollectionIdentifiers.includes(transactionIdentifier)) {\n          return false;\n        }\n        transactionCollectionIdentifiers.push(transactionIdentifier);\n        return true;\n      });\n      return [...transactionsToAdd, ...transactionCollection];\n    }\n    return transactionCollection;\n  }\n\n  protected convertDateFromClient(transaction: ITransaction): ITransaction {\n    return Object.assign({}, transaction, {\n      dateOfPayment: transaction.dateOfPayment?.isValid() ? transaction.dateOfPayment.toJSON() : undefined,\n      createdDate: transaction.createdDate?.isValid() ? transaction.createdDate.toJSON() : undefined,\n    });\n  }\n\n  protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\n    if (res.body) {\n      res.body.dateOfPayment = res.body.dateOfPayment ? dayjs(res.body.dateOfPayment) : undefined;\n      res.body.createdDate = res.body.createdDate ? dayjs(res.body.createdDate) : undefined;\n    }\n    return res;\n  }\n\n  protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\n    if (res.body) {\n      res.body.forEach((transaction: ITransaction) => {\n        transaction.dateOfPayment = transaction.dateOfPayment ? dayjs(transaction.dateOfPayment) : undefined;\n        transaction.createdDate = transaction.createdDate ? dayjs(transaction.createdDate) : undefined;\n      });\n    }\n    return res;\n  }\n}\n","import dayjs from 'dayjs/esm';\nimport { IMoneyRecipient } from 'app/entities/money-recipient/money-recipient.model';\nimport { IActivity } from 'app/entities/activity/activity.model';\n\nexport interface ITransaction {\n  id?: string;\n  sumOfMoney?: number | null;\n  message?: string | null;\n  wasPaid?: boolean | null;\n  dateOfPayment?: dayjs.Dayjs | null;\n  createdDate?: dayjs.Dayjs | null;\n  recipient?: IMoneyRecipient | null;\n  activities?: IActivity[] | null;\n}\n\nexport class Transaction implements ITransaction {\n  constructor(\n    public id?: string,\n    public sumOfMoney?: number | null,\n    public message?: string | null,\n    public wasPaid?: boolean | null,\n    public dateOfPayment?: dayjs.Dayjs | null,\n    public createdDate?: dayjs.Dayjs | null,\n    public recipient?: IMoneyRecipient | null,\n    public activities?: IActivity[] | null\n  ) {\n    this.wasPaid = this.wasPaid ?? false;\n  }\n}\n\nexport function getTransactionIdentifier(transaction: ITransaction): string | undefined {\n  return transaction.id;\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { TransactionComponent } from './list/transaction.component';\nimport { TransactionDetailComponent } from './detail/transaction-detail.component';\nimport { TransactionUpdateComponent } from './update/transaction-update.component';\nimport { TransactionDeleteDialogComponent } from './delete/transaction-delete-dialog.component';\nimport { TransactionRoutingModule } from './route/transaction-routing.module';\n\n@NgModule({\n  imports: [SharedModule, TransactionRoutingModule],\n  declarations: [TransactionComponent, TransactionDetailComponent, TransactionUpdateComponent, TransactionDeleteDialogComponent],\n  entryComponents: [TransactionDeleteDialogComponent],\n})\nexport class TransactionModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { finalize, map } from 'rxjs/operators';\n\nimport dayjs from 'dayjs/esm';\nimport { DATE_TIME_FORMAT } from 'app/config/input.constants';\n\nimport { ITransaction, Transaction } from '../transaction.model';\nimport { TransactionService } from '../service/transaction.service';\nimport { IMoneyRecipient } from 'app/entities/money-recipient/money-recipient.model';\nimport { MoneyRecipientService } from 'app/entities/money-recipient/service/money-recipient.service';\nimport { IActivity } from 'app/entities/activity/activity.model';\nimport { ActivityService } from 'app/entities/activity/service/activity.service';\n\n@Component({\n  selector: 'jhi-transaction-update',\n  templateUrl: './transaction-update.component.html',\n})\nexport class TransactionUpdateComponent implements OnInit {\n  isSaving = false;\n\n  moneyRecipientsSharedCollection: IMoneyRecipient[] = [];\n  activitiesSharedCollection: IActivity[] = [];\n\n  editForm = this.fb.group({\n    id: [],\n    sumOfMoney: [],\n    message: [],\n    wasPaid: [],\n    dateOfPayment: [],\n    createdDate: [],\n    recipient: [],\n    activities: [],\n  });\n\n  constructor(\n    protected transactionService: TransactionService,\n    protected moneyRecipientService: MoneyRecipientService,\n    protected activityService: ActivityService,\n    protected activatedRoute: ActivatedRoute,\n    protected fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ transaction }) => {\n      if (transaction.id === undefined) {\n        const today = dayjs().startOf('day');\n        transaction.dateOfPayment = today;\n        transaction.createdDate = today;\n      }\n\n      this.updateForm(transaction);\n\n      this.loadRelationshipsOptions();\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const transaction = this.createFromForm();\n    if (transaction.id !== undefined) {\n      this.subscribeToSaveResponse(this.transactionService.update(transaction));\n    } else {\n      this.subscribeToSaveResponse(this.transactionService.create(transaction));\n    }\n  }\n\n  trackMoneyRecipientById(_index: number, item: IMoneyRecipient): string {\n    return item.id!;\n  }\n\n  trackActivityById(_index: number, item: IActivity): string {\n    return item.id!;\n  }\n\n  getSelectedActivity(option: IActivity, selectedVals?: IActivity[]): IActivity {\n    if (selectedVals) {\n      for (const selectedVal of selectedVals) {\n        if (option.id === selectedVal.id) {\n          return selectedVal;\n        }\n      }\n    }\n    return option;\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<ITransaction>>): void {\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe({\n      next: () => this.onSaveSuccess(),\n      error: () => this.onSaveError(),\n    });\n  }\n\n  protected onSaveSuccess(): void {\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    // Api for inheritance.\n  }\n\n  protected onSaveFinalize(): void {\n    this.isSaving = false;\n  }\n\n  protected updateForm(transaction: ITransaction): void {\n    this.editForm.patchValue({\n      id: transaction.id,\n      sumOfMoney: transaction.sumOfMoney,\n      message: transaction.message,\n      wasPaid: transaction.wasPaid,\n      dateOfPayment: transaction.dateOfPayment ? transaction.dateOfPayment.format(DATE_TIME_FORMAT) : null,\n      createdDate: transaction.createdDate ? transaction.createdDate.format(DATE_TIME_FORMAT) : null,\n      recipient: transaction.recipient,\n      activities: transaction.activities,\n    });\n\n    this.moneyRecipientsSharedCollection = this.moneyRecipientService.addMoneyRecipientToCollectionIfMissing(\n      this.moneyRecipientsSharedCollection,\n      transaction.recipient\n    );\n    this.activitiesSharedCollection = this.activityService.addActivityToCollectionIfMissing(\n      this.activitiesSharedCollection,\n      ...(transaction.activities ?? [])\n    );\n  }\n\n  protected loadRelationshipsOptions(): void {\n    this.moneyRecipientService\n      .query()\n      .pipe(map((res: HttpResponse<IMoneyRecipient[]>) => res.body ?? []))\n      .pipe(\n        map((moneyRecipients: IMoneyRecipient[]) =>\n          this.moneyRecipientService.addMoneyRecipientToCollectionIfMissing(moneyRecipients, this.editForm.get('recipient')!.value)\n        )\n      )\n      .subscribe((moneyRecipients: IMoneyRecipient[]) => (this.moneyRecipientsSharedCollection = moneyRecipients));\n\n    this.activityService\n      .query()\n      .pipe(map((res: HttpResponse<IActivity[]>) => res.body ?? []))\n      .pipe(\n        map((activities: IActivity[]) =>\n          this.activityService.addActivityToCollectionIfMissing(activities, ...(this.editForm.get('activities')!.value ?? []))\n        )\n      )\n      .subscribe((activities: IActivity[]) => (this.activitiesSharedCollection = activities));\n  }\n\n  protected createFromForm(): ITransaction {\n    return {\n      ...new Transaction(),\n      id: this.editForm.get(['id'])!.value,\n      sumOfMoney: this.editForm.get(['sumOfMoney'])!.value,\n      message: this.editForm.get(['message'])!.value,\n      wasPaid: this.editForm.get(['wasPaid'])!.value,\n      dateOfPayment: this.editForm.get(['dateOfPayment'])!.value\n        ? dayjs(this.editForm.get(['dateOfPayment'])!.value, DATE_TIME_FORMAT)\n        : undefined,\n      createdDate: this.editForm.get(['createdDate'])!.value\n        ? dayjs(this.editForm.get(['createdDate'])!.value, DATE_TIME_FORMAT)\n        : undefined,\n      recipient: this.editForm.get(['recipient'])!.value,\n      activities: this.editForm.get(['activities'])!.value,\n    };\n  }\n}\n","<div class=\"d-flex justify-content-center\">\n  <div class=\"col-8\">\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\n      <h2\n        id=\"jhi-transaction-heading\"\n        data-cy=\"TransactionCreateUpdateHeading\"\n        jhiTranslate=\"donorunApp.transaction.home.createOrEditLabel\"\n      >\n        Create or edit a Transaction\n      </h2>\n\n      <div>\n        <jhi-alert-error></jhi-alert-error>\n\n        <div class=\"row mb-3\" [hidden]=\"editForm.get('id')!.value == null\">\n          <label class=\"form-label\" jhiTranslate=\"global.field.id\" for=\"field_id\">ID</label>\n          <input type=\"text\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"form-label\" jhiTranslate=\"donorunApp.transaction.sumOfMoney\" for=\"field_sumOfMoney\">Sum Of Money</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"sumOfMoney\"\n            id=\"field_sumOfMoney\"\n            data-cy=\"sumOfMoney\"\n            formControlName=\"sumOfMoney\"\n          />\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"form-label\" jhiTranslate=\"donorunApp.transaction.message\" for=\"field_message\">Message</label>\n          <input type=\"text\" class=\"form-control\" name=\"message\" id=\"field_message\" data-cy=\"message\" formControlName=\"message\" />\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"form-label\" jhiTranslate=\"donorunApp.transaction.wasPaid\" for=\"field_wasPaid\">Was Paid</label>\n          <input type=\"checkbox\" class=\"form-check\" name=\"wasPaid\" id=\"field_wasPaid\" data-cy=\"wasPaid\" formControlName=\"wasPaid\" />\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"form-label\" jhiTranslate=\"donorunApp.transaction.dateOfPayment\" for=\"field_dateOfPayment\">Date Of Payment</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"field_dateOfPayment\"\n              data-cy=\"dateOfPayment\"\n              type=\"datetime-local\"\n              class=\"form-control\"\n              name=\"dateOfPayment\"\n              formControlName=\"dateOfPayment\"\n              placeholder=\"YYYY-MM-DD HH:mm\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"form-label\" jhiTranslate=\"donorunApp.transaction.createdDate\" for=\"field_createdDate\">Created Date</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"field_createdDate\"\n              data-cy=\"createdDate\"\n              type=\"datetime-local\"\n              class=\"form-control\"\n              name=\"createdDate\"\n              formControlName=\"createdDate\"\n              placeholder=\"YYYY-MM-DD HH:mm\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label class=\"form-label\" jhiTranslate=\"donorunApp.transaction.recipient\" for=\"field_recipient\">Recipient</label>\n          <select class=\"form-control\" id=\"field_recipient\" data-cy=\"recipient\" name=\"recipient\" formControlName=\"recipient\">\n            <option [ngValue]=\"null\"></option>\n            <option\n              [ngValue]=\"\n                moneyRecipientOption.id === editForm.get('recipient')!.value?.id ? editForm.get('recipient')!.value : moneyRecipientOption\n              \"\n              *ngFor=\"let moneyRecipientOption of moneyRecipientsSharedCollection; trackBy: trackMoneyRecipientById\"\n            >\n              {{ moneyRecipientOption.id }}\n            </option>\n          </select>\n        </div>\n\n        <div class=\"row mb-3\">\n          <label jhiTranslate=\"donorunApp.transaction.activities\" for=\"field_activities\">Activities</label>\n          <select class=\"form-control\" id=\"field_activities\" data-cy=\"activities\" multiple name=\"activities\" formControlName=\"activities\">\n            <option\n              [ngValue]=\"getSelectedActivity(activityOption, editForm.get('activities')!.value)\"\n              *ngFor=\"let activityOption of activitiesSharedCollection; trackBy: trackActivityById\"\n            >\n              {{ activityOption.id }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div>\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n\n        <button\n          type=\"submit\"\n          id=\"save-entity\"\n          data-cy=\"entityCreateSaveButton\"\n          [disabled]=\"editForm.invalid || isSaving\"\n          class=\"btn btn-primary\"\n        >\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}